{"id":"node_modules/stl/stl.js","dependencies":[{"name":"C:\\Users\\admin\\Desktop\\selfintroduction\\package.json","includedInParent":true,"mtime":1592922209038},{"name":"C:\\Users\\admin\\Desktop\\selfintroduction\\.babelrc","includedInParent":true,"mtime":1592738145926},{"name":"C:\\Users\\admin\\Desktop\\selfintroduction\\node_modules\\stl\\package.json","includedInParent":true,"mtime":1592922208601},{"name":"stream-fsm","loc":{"line":1,"column":18},"parent":"C:\\Users\\admin\\Desktop\\selfintroduction\\node_modules\\stl\\stl.js","resolved":"C:\\Users\\admin\\Desktop\\selfintroduction\\node_modules\\stream-fsm\\index.js"},{"name":"split","loc":{"line":2,"column":20},"parent":"C:\\Users\\admin\\Desktop\\selfintroduction\\node_modules\\stl\\stl.js","resolved":"C:\\Users\\admin\\Desktop\\selfintroduction\\node_modules\\split\\index.js"},{"name":"triangle-normal","loc":{"line":3,"column":24},"parent":"C:\\Users\\admin\\Desktop\\selfintroduction\\node_modules\\stl\\stl.js","resolved":"C:\\Users\\admin\\Desktop\\selfintroduction\\node_modules\\triangle-normal\\index.js"},{"name":"buffer","parent":"C:\\Users\\admin\\Desktop\\selfintroduction\\node_modules\\stl\\stl.js","resolved":"C:\\Users\\admin\\Desktop\\selfintroduction\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar fsm = require('stream-fsm');\nvar split = require('split');\nvar normalize = require('triangle-normal');\n\nfunction trim(a) {\n  var nullTerm = a.indexOf('\\u0000');\n  if (nullTerm > -1) {\n    a = a.substr(0, nullTerm);\n  }\n  return a.trim();\n};\n\nfunction computeNormal(facet) {\n  var v = facet.verts;\n  return normalize(\n    v[0][0], v[0][1], v[0][2],\n    v[1][0], v[1][1], v[1][2],\n    v[2][0], v[2][1], v[2][2]\n  );\n}\n\nfunction exp(a) {\n  return a.toExponential();\n}\n\nmodule.exports = {\n  facetNormal : computeNormal,\n\n\n  // `stl` may be binary or ascii\n  toObject : function(stl) {\n\n    var ret = {\n      description: '',\n      facets : []\n    };\n\n    var s = this.createParseStream();\n    s.on('data', function(d) {\n      if (!d.verts) {\n        if (!ret.description) {\n          ret.description = d.description;\n        }\n      } else {\n        ret.facets.push(d);\n      }\n    });\n    s.write(!Buffer.isBuffer(stl) ? new Buffer(stl) : stl);\n    s.end();\n\n    return ret;\n  },\n\n  // Convert the incoming object into the stl\n  // file format. Passing a truthy value for\n  // binary causes a binary stl to be created.\n  fromObject: function(obj, binary) {\n\n    if (!binary) {\n      var str = [\n        'solid ' + obj.description.trim()\n      ];\n\n      var fl = obj.facets.length;\n\n      for (var j = 0; j<fl; j++) {\n        var facet = obj.facets[j];\n        var n = facet.normal || computeNormal(facet);\n\n        str.push('  facet normal ' + [\n          exp(n[0]), exp(n[1]), exp(n[2])\n        ].join(' '));\n\n        str.push('    outer loop');\n        var v = facet.verts;\n\n        var p = '      vertex ';\n        str.push(p + [exp(v[0][0]), exp(v[0][1]), exp(v[0][2])].join(' '));\n        str.push(p + [exp(v[1][0]), exp(v[1][1]), exp(v[1][2])].join(' '));\n        str.push(p + [exp(v[2][0]), exp(v[2][1]), exp(v[2][2])].join(' '));\n\n        str.push('    endloop');\n        str.push('  endfacet');\n      }\n\n      str.push('endsolid');\n      return str.join('\\n');\n    } else {\n\n      var count = obj.facets.length;\n\n      var ret = new Buffer(84 +  count*12*4 + count*2);\n      ret.fill(0, 0, 80);\n      ret.write(obj.description || '');\n      ret.writeUInt32LE(count, 80);\n\n      var offset = 84;\n\n      var write = function(val) {\n        ret.writeFloatLE(val, offset);\n        offset+=4;\n      };\n\n      var facetCount = obj.facets.length;\n      for (var j = 0; j<facetCount; j++) {\n        var facet = obj.facets[j];\n        var n = facet.normal || computeNormal(facet);\n\n        write(n[0]);\n        write(n[1]);\n        write(n[2]);\n\n        var l = facet.verts.length;\n        for (var i = 0; i<l; i++) {\n          var vert = facet.verts[i];\n          write(vert[0]);\n          write(vert[1]);\n          write(vert[2]);\n        }\n\n        ret.writeUInt16LE(facet.attributeByteCount || 0, offset);\n        offset+=2;\n      }\n      return ret;\n    }\n  },\n\n  createParseStream : function() {\n    var binaryMode = false;\n    var facetCount = 0;\n    var facets = [];\n    var description = null;\n    var currentFacet;\n    var asciiValid = false;\n    var ended = false;\n    var splitter = null;\n\n    var stream = fsm({\n      init : fsm.want(84, function readBinaryHeader(data) {\n        var dataString = data.toString();\n\n        if (dataString.toLowerCase().indexOf('solid') > -1) {\n          facetCount = data.readUInt32LE(80);\n          this.change('ascii');\n        } else {\n          this.change('binary');\n        }\n\n        return 0;\n      }),\n\n      binary : fsm.want(80, function(data) {\n        description = trim(data.toString());\n        this.change('count');\n      }),\n\n      count : fsm.want(4, function(data) {\n        facetCount = data.readUInt32LE(0);\n        this.queue({\n          description : description,\n          facetCount: facetCount\n        });\n\n        this.change('normal');\n      }),\n\n      normal : fsm.want(12, function(data) {\n        currentFacet = {\n          normal : [\n            data.readFloatLE(0),\n            data.readFloatLE(4),\n            data.readFloatLE(8)\n          ],\n          verts : []\n        };\n\n        this.change('verts');\n      }),\n\n      verts : fsm.want(36, function(data) {\n\n        for (var i=0; i<36; i+=12) {\n          currentFacet.verts.push([\n            data.readFloatLE(i),\n            data.readFloatLE(i+4),\n            data.readFloatLE(i+8)\n          ]);\n        }\n\n        this.change('attributeBytes');\n      }),\n\n      attributeBytes : fsm.want(2, function(data) {\n        currentFacet.attributeByteCount = data.readUInt16LE(0);\n        this.queue(currentFacet);\n\n        currentFacet = null;\n        facetCount--;\n\n        if (facetCount <= 0) {\n          this.done();\n        } else {\n          this.change('normal');\n        }\n\n      }),\n\n      ascii : function(pending) {\n        if (!splitter) {\n          splitter = split();\n\n          stream.on('end', function() {\n            splitter.end();\n          });\n\n          var inFacet = false;\n          var facet;\n          var that = this;\n          splitter.on('data', function(data) {\n            if (!data.trim().length) {\n              return;\n            }\n\n            if (data.indexOf('solid') > -1) {\n              stream.queue({\n                description : data.trim().split(' ').slice(1).join(' ')\n              });\n\n            } else if (data.indexOf('endfacet') > -1) {\n              if (!facet.normal.length) {\n                // facet.normal = computeNormal(facet);\n              }\n              inFacet = false;\n              stream.queue(facet);\n              facet = null\n            } else if (data.indexOf('facet') > -1) {\n              // This is not fool proof, but far better than\n              // \"OH LOOK I NAMED MY STL 'solid'\" *sigh*\n\n              asciiValid = true;\n              var normal = data.replace(/ +/g, ' ').trim().split(' ').slice(2).map(parseFloat);\n\n              facet = {\n                normal : normal,\n                verts : [],\n                attributeByteCount: 0\n              };\n\n            } else if (data.indexOf('vertex') > -1) {\n              var coords = data.replace(/ +/g, ' ').trim().split(' ').slice(1).map(parseFloat);\n              facet.verts.push(coords);\n            } else if (!asciiValid) {\n              that.mode('binary');\n            }\n          });\n\n          stream.originalWrite = stream.write;\n        }\n\n        splitter.write(pending);\n        ended && stream.end();\n\n        // Returning false here buffers the data.\n        // If we are not \"sure\" this is an ascii stl file then\n        // we need to continue buffering\n\n        return (asciiValid) ? pending.length : false;\n      }\n\n    }, function() {\n    });\n\n    stream.originalEnd = stream.end;\n    stream.end = function(d) {\n\n      var mode = stream.fsm.mode();\n      var cache = stream.fsm.cache();\n      if (mode === 'ascii' && !asciiValid && cache) {\n        // this is a binary file that has the description: \"solid ...\"\n        // send the complete file through binary mode\n        stream.fsm.change('binary');\n\n        // trigger a write since we have the entire file buffered in memory\n        stream.fsm();\n\n        stream.originalEnd();\n      } else {\n        ended = true;\n        stream.originalEnd();\n      }\n    };\n\n    return stream;\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/stl/stl.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/stl/stl.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}}],"sources":{"node_modules/stl/stl.js":"var fsm = require('stream-fsm');\nvar split = require('split');\nvar normalize = require('triangle-normal');\n\nfunction trim(a) {\n  var nullTerm = a.indexOf('\\u0000');\n  if (nullTerm > -1) {\n    a = a.substr(0, nullTerm);\n  }\n  return a.trim();\n};\n\nfunction computeNormal(facet) {\n  var v = facet.verts;\n  return normalize(\n    v[0][0], v[0][1], v[0][2],\n    v[1][0], v[1][1], v[1][2],\n    v[2][0], v[2][1], v[2][2]\n  );\n}\n\nfunction exp(a) {\n  return a.toExponential();\n}\n\nmodule.exports = {\n  facetNormal : computeNormal,\n\n\n  // `stl` may be binary or ascii\n  toObject : function(stl) {\n\n    var ret = {\n      description: '',\n      facets : []\n    };\n\n    var s = this.createParseStream();\n    s.on('data', function(d) {\n      if (!d.verts) {\n        if (!ret.description) {\n          ret.description = d.description;\n        }\n      } else {\n        ret.facets.push(d);\n      }\n    });\n    s.write(!Buffer.isBuffer(stl) ? new Buffer(stl) : stl);\n    s.end();\n\n    return ret;\n  },\n\n  // Convert the incoming object into the stl\n  // file format. Passing a truthy value for\n  // binary causes a binary stl to be created.\n  fromObject: function(obj, binary) {\n\n    if (!binary) {\n      var str = [\n        'solid ' + obj.description.trim()\n      ];\n\n      var fl = obj.facets.length;\n\n      for (var j = 0; j<fl; j++) {\n        var facet = obj.facets[j];\n        var n = facet.normal || computeNormal(facet);\n\n        str.push('  facet normal ' + [\n          exp(n[0]), exp(n[1]), exp(n[2])\n        ].join(' '));\n\n        str.push('    outer loop');\n        var v = facet.verts;\n\n        var p = '      vertex ';\n        str.push(p + [exp(v[0][0]), exp(v[0][1]), exp(v[0][2])].join(' '));\n        str.push(p + [exp(v[1][0]), exp(v[1][1]), exp(v[1][2])].join(' '));\n        str.push(p + [exp(v[2][0]), exp(v[2][1]), exp(v[2][2])].join(' '));\n\n        str.push('    endloop');\n        str.push('  endfacet');\n      }\n\n      str.push('endsolid');\n      return str.join('\\n');\n    } else {\n\n      var count = obj.facets.length;\n\n      var ret = new Buffer(84 +  count*12*4 + count*2);\n      ret.fill(0, 0, 80);\n      ret.write(obj.description || '');\n      ret.writeUInt32LE(count, 80);\n\n      var offset = 84;\n\n      var write = function(val) {\n        ret.writeFloatLE(val, offset);\n        offset+=4;\n      };\n\n      var facetCount = obj.facets.length;\n      for (var j = 0; j<facetCount; j++) {\n        var facet = obj.facets[j];\n        var n = facet.normal || computeNormal(facet);\n\n        write(n[0]);\n        write(n[1]);\n        write(n[2]);\n\n        var l = facet.verts.length;\n        for (var i = 0; i<l; i++) {\n          var vert = facet.verts[i];\n          write(vert[0]);\n          write(vert[1]);\n          write(vert[2]);\n        }\n\n        ret.writeUInt16LE(facet.attributeByteCount || 0, offset);\n        offset+=2;\n      }\n      return ret;\n    }\n  },\n\n  createParseStream : function() {\n    var binaryMode = false;\n    var facetCount = 0;\n    var facets = [];\n    var description = null;\n    var currentFacet;\n    var asciiValid = false;\n    var ended = false;\n    var splitter = null;\n\n    var stream = fsm({\n      init : fsm.want(84, function readBinaryHeader(data) {\n        var dataString = data.toString();\n\n        if (dataString.toLowerCase().indexOf('solid') > -1) {\n          facetCount = data.readUInt32LE(80);\n          this.change('ascii');\n        } else {\n          this.change('binary');\n        }\n\n        return 0;\n      }),\n\n      binary : fsm.want(80, function(data) {\n        description = trim(data.toString());\n        this.change('count');\n      }),\n\n      count : fsm.want(4, function(data) {\n        facetCount = data.readUInt32LE(0);\n        this.queue({\n          description : description,\n          facetCount: facetCount\n        });\n\n        this.change('normal');\n      }),\n\n      normal : fsm.want(12, function(data) {\n        currentFacet = {\n          normal : [\n            data.readFloatLE(0),\n            data.readFloatLE(4),\n            data.readFloatLE(8)\n          ],\n          verts : []\n        };\n\n        this.change('verts');\n      }),\n\n      verts : fsm.want(36, function(data) {\n\n        for (var i=0; i<36; i+=12) {\n          currentFacet.verts.push([\n            data.readFloatLE(i),\n            data.readFloatLE(i+4),\n            data.readFloatLE(i+8)\n          ]);\n        }\n\n        this.change('attributeBytes');\n      }),\n\n      attributeBytes : fsm.want(2, function(data) {\n        currentFacet.attributeByteCount = data.readUInt16LE(0);\n        this.queue(currentFacet);\n\n        currentFacet = null;\n        facetCount--;\n\n        if (facetCount <= 0) {\n          this.done();\n        } else {\n          this.change('normal');\n        }\n\n      }),\n\n      ascii : function(pending) {\n        if (!splitter) {\n          splitter = split();\n\n          stream.on('end', function() {\n            splitter.end();\n          });\n\n          var inFacet = false;\n          var facet;\n          var that = this;\n          splitter.on('data', function(data) {\n            if (!data.trim().length) {\n              return;\n            }\n\n            if (data.indexOf('solid') > -1) {\n              stream.queue({\n                description : data.trim().split(' ').slice(1).join(' ')\n              });\n\n            } else if (data.indexOf('endfacet') > -1) {\n              if (!facet.normal.length) {\n                // facet.normal = computeNormal(facet);\n              }\n              inFacet = false;\n              stream.queue(facet);\n              facet = null\n            } else if (data.indexOf('facet') > -1) {\n              // This is not fool proof, but far better than\n              // \"OH LOOK I NAMED MY STL 'solid'\" *sigh*\n\n              asciiValid = true;\n              var normal = data.replace(/ +/g, ' ').trim().split(' ').slice(2).map(parseFloat);\n\n              facet = {\n                normal : normal,\n                verts : [],\n                attributeByteCount: 0\n              };\n\n            } else if (data.indexOf('vertex') > -1) {\n              var coords = data.replace(/ +/g, ' ').trim().split(' ').slice(1).map(parseFloat);\n              facet.verts.push(coords);\n            } else if (!asciiValid) {\n              that.mode('binary');\n            }\n          });\n\n          stream.originalWrite = stream.write;\n        }\n\n        splitter.write(pending);\n        ended && stream.end();\n\n        // Returning false here buffers the data.\n        // If we are not \"sure\" this is an ascii stl file then\n        // we need to continue buffering\n\n        return (asciiValid) ? pending.length : false;\n      }\n\n    }, function() {\n    });\n\n    stream.originalEnd = stream.end;\n    stream.end = function(d) {\n\n      var mode = stream.fsm.mode();\n      var cache = stream.fsm.cache();\n      if (mode === 'ascii' && !asciiValid && cache) {\n        // this is a binary file that has the description: \"solid ...\"\n        // send the complete file through binary mode\n        stream.fsm.change('binary');\n\n        // trigger a write since we have the entire file buffered in memory\n        stream.fsm();\n\n        stream.originalEnd();\n      } else {\n        ended = true;\n        stream.originalEnd();\n      }\n    };\n\n    return stream;\n  }\n};\n"},"lineCount":297}},"error":null,"hash":"e7529594af596d31fd64416be8aba378","cacheData":{"env":{}}}